module PolynomDiff
  # Вспопогательный класс для перевода полинома
  # из представления [[коэффициент, "переменная", степень], ...] в строку
  class PolynomToString
    # Метод для перевода полинома
    # из представления [[коэффициент, "переменная", степень], ...] в строку
    def self.ToString(terms)
      # Будем набирать полином, проходя по массиву
      polynomial = ""
      if terms.empty?
        return ""
      else
        coef, var, exp = nil
        for i in 0..(terms.size - 1)
          coef, var, exp = terms[i][0], terms[i][1], terms[i][2]
          # Предположим, что на вход из внешнего источника может попасть массив с нулями
          next if coef == 0
          if coef > 0
            # Перед первым слагаемым плюс ставить не требуется
            if i != 0
              polynomial += "+"
            end
            # Коэффициент единица ставить не требуется
            if coef != 1
              polynomial += coef.to_s
            end
          else
            # Отрицательный коэффициент уже содержит минус
            if coef != -1
              polynomial += coef.to_s
            else
              # Из коэффициента минус единица оставляем только минус
              polynomial += "-"
            end
          end
          # Будем считать, что просто коэффициенты в степени заранее вычислены и подаваться не будут
          # Также допустим, что полученный из внешних источников массив может содержать слагаемые с нулевыми степенями
          if !var.nil? && exp != 0
            # Если коэффициент не 1/-1, то мы его запишем и добавим знак умножения
            if coef != 1 && coef != -1
              polynomial += "*"
            end
            polynomial += var
            # Если степень не единица, то мы её запишем и добавим знак возведения в степень
            if exp != 1
              polynomial += "^"
              # Если степень положительна, то запишем её без скобок
              if exp > 0
                polynomial += exp.to_s
              end
              # Если степень отрицательна, запишем её в скобках
              if exp < 0
                polynomial += "(" + exp.to_s + ")"
              end
            end
          end
        end
      end
      return polynomial
    end
  end
end
